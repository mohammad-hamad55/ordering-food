{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Ordering Food Project\\\\Orering-Food-Project\\\\src\\\\componints\\\\cart\\\\OrderingForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./OrderingForm.module.css\";\nimport InputItem from \"./InputItem\";\nimport ButtonForm from \"./ButtonForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderingForm = props => {\n  _s();\n\n  const myShopingList = useSelector(state => state.shopingList.myShopingList);\n\n  async function sendData(info) {\n    try {\n      setLoading(true);\n      props.submitingHandler(true);\n      const res = await fetch(\"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\", {\n        method: \"POST\",\n        body: JSON.stringify({ ...info,\n          myElments: myShopingList\n        }),\n        headers: {\n          \"contint-type\": \"application/json\"\n        }\n      });\n\n      if (!res.ok) {\n        throw new Error(\"rong\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n    props.submitingHandler(false);\n    props.submitedHandler(true);\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setNameToutch(true);\n    setStreetTouch(true);\n    setPostaltoutch(true);\n    setCityToutch(true);\n\n    if (!formValid) {\n      return;\n    }\n\n    sendData({\n      name,\n      street,\n      postal,\n      city\n    });\n    setNameToutch(false);\n    setStreetTouch(false);\n    setPostaltoutch(false);\n    setCityToutch(false);\n    setName(\"\");\n    setStreet(\"\");\n    setPostal(\"\");\n    setCity(\"\");\n    props.submitedHandler(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.myForm,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputss,\n      children: [/*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Your Name\",\n        changeHandler: changeNameHandler,\n        blurHandler: blurNameHandler,\n        value: name,\n        valdtionMessge: \"name must not be empty\",\n        inputToutch: nameToutch,\n        inputValid: nameValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Street\",\n        changeHandler: changeStreetHandler,\n        blurHandler: blurStreetHandler,\n        value: street,\n        valdtionMessge: \"street must not be empty\",\n        inputToutch: streetToutch,\n        inputValid: streetValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Postal Code\",\n        changeHandler: changePostalHandler,\n        blurHandler: blurPostalHandler,\n        value: postal,\n        valdtionMessge: postalContent,\n        inputToutch: postalToutch,\n        inputValid: postalValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"City\",\n        changeHandler: changeCityHandler,\n        blurHandler: blurCityHandler,\n        value: city,\n        valdtionMessge: \"city must not be empty\",\n        inputToutch: cityToutch,\n        inputValid: cityValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonForm, {\n      isLoading: isLoading,\n      hasError: hasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderingForm, \"8g9cJ1l8dumfym0708v34VEyX88=\", false, function () {\n  return [useSelector];\n});\n\n_c = OrderingForm;\nexport default OrderingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderingForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Ordering Food Project/Orering-Food-Project/src/componints/cart/OrderingForm.js"],"names":["React","useSelector","styles","InputItem","ButtonForm","OrderingForm","props","myShopingList","state","shopingList","sendData","info","setLoading","submitingHandler","res","fetch","method","body","JSON","stringify","myElments","headers","ok","Error","error","setError","message","submitedHandler","submitHandler","e","preventDefault","setNameToutch","setStreetTouch","setPostaltoutch","setCityToutch","formValid","name","street","postal","city","setName","setStreet","setPostal","setCity","myForm","inputss","changeNameHandler","blurNameHandler","nameToutch","nameValid","changeStreetHandler","blurStreetHandler","streetToutch","streetValid","changePostalHandler","blurPostalHandler","postalContent","postalToutch","postalValid","changeCityHandler","blurCityHandler","cityToutch","cityValid","isLoading","hasError"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./OrderingForm.module.css\";\r\nimport InputItem from \"./InputItem\";\r\nimport ButtonForm from \"./ButtonForm\";\r\nconst OrderingForm = (props) => {\r\n  const myShopingList = useSelector((state) => state.shopingList.myShopingList);\r\n  \r\n \r\n\r\n  async function sendData(info) {\r\n    try {\r\n      setLoading(true);\r\n      props.submitingHandler(true);\r\n      const res = await fetch(\r\n        \"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ ...info, myElments: myShopingList }),\r\n          headers: { \"contint-type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"rong\");\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setLoading(false);\r\n    props.submitingHandler(false);\r\n    props.submitedHandler(true);\r\n  }\r\n\r\n\r\n \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setNameToutch(true);\r\n    setStreetTouch(true);\r\n    setPostaltoutch(true);\r\n    setCityToutch(true);\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    sendData({\r\n      name,\r\n      street,\r\n      postal,\r\n      city,\r\n    });\r\n\r\n    setNameToutch(false);\r\n    setStreetTouch(false);\r\n    setPostaltoutch(false);\r\n    setCityToutch(false);\r\n    setName(\"\");\r\n    setStreet(\"\");\r\n    setPostal(\"\");\r\n    setCity(\"\");\r\n    props.submitedHandler(false);\r\n  };\r\n \r\n  return (\r\n    <form className={styles.myForm} onSubmit={submitHandler}>\r\n      <div className={styles.inputss}>\r\n        <InputItem\r\n          id=\"Your Name\"\r\n          changeHandler={changeNameHandler}\r\n          blurHandler={blurNameHandler}\r\n          value={name}\r\n          valdtionMessge=\"name must not be empty\"\r\n          inputToutch={nameToutch}\r\n          inputValid={nameValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"Street\"\r\n          changeHandler={changeStreetHandler}\r\n          blurHandler={blurStreetHandler}\r\n          value={street}\r\n          valdtionMessge=\"street must not be empty\"\r\n          inputToutch={streetToutch}\r\n          inputValid={streetValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"Postal Code\"\r\n          changeHandler={changePostalHandler}\r\n          blurHandler={blurPostalHandler}\r\n          value={postal}\r\n          valdtionMessge={postalContent}\r\n          inputToutch={postalToutch}\r\n          inputValid={postalValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"City\"\r\n          changeHandler={changeCityHandler}\r\n          blurHandler={blurCityHandler}\r\n          value={city}\r\n          valdtionMessge=\"city must not be empty\"\r\n          inputToutch={cityToutch}\r\n          inputValid={cityValid}\r\n        ></InputItem>\r\n      </div>\r\n  <ButtonForm isLoading={isLoading} hasError={hasError}/>\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderingForm;\r\n"]},"metadata":{},"sourceType":"module"}