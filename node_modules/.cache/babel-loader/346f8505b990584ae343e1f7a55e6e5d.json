{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Ordering Food Project\\\\Orering-Food-Project\\\\src\\\\componints\\\\cart\\\\OrderingForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./OrderingForm.module.css\";\nimport InputItem from \"./InputItem\";\nimport ButtonForm from \"./ButtonForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderingForm = props => {\n  _s();\n\n  const myShopingList = useSelector(state => state.shopingList.myShopingList);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  async function sendData(info) {\n    try {\n      setLoading(true);\n      props.submitingHandler(true);\n      const res = await fetch(\"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\", {\n        method: \"POST\",\n        body: JSON.stringify({ ...info,\n          myElments: myShopingList\n        }),\n        headers: {\n          \"contint-type\": \"application/json\"\n        }\n      });\n\n      if (!res.ok) {\n        throw new Error(\"rong\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n    props.submitingHandler(false);\n    props.submitedHandler(true);\n  }\n\n  const formValid = nameValid && streetValid && cityValid && postalValid;\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setNameToutch(true);\n    setStreetTouch(true);\n    setPostaltoutch(true);\n    setCityToutch(true);\n\n    if (!formValid) {\n      return;\n    }\n\n    sendData({\n      name,\n      street,\n      postal,\n      city\n    });\n    setNameToutch(false);\n    setStreetTouch(false);\n    setPostaltoutch(false);\n    setCityToutch(false);\n    setName(\"\");\n    setStreet(\"\");\n    setPostal(\"\");\n    setCity(\"\");\n    props.submitedHandler(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.myForm,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputss,\n      children: [/*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonForm, {\n      isLoading: isLoading,\n      hasError: hasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderingForm, \"UKTQfv/+w8CSJCRQ/IYUXHj8qLs=\", false, function () {\n  return [useSelector];\n});\n\n_c = OrderingForm;\nexport default OrderingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderingForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Ordering Food Project/Orering-Food-Project/src/componints/cart/OrderingForm.js"],"names":["React","useState","useSelector","styles","InputItem","ButtonForm","OrderingForm","props","myShopingList","state","shopingList","isLoading","setLoading","hasError","setError","sendData","info","submitingHandler","res","fetch","method","body","JSON","stringify","myElments","headers","ok","Error","error","message","submitedHandler","formValid","nameValid","streetValid","cityValid","postalValid","submitHandler","e","preventDefault","setNameToutch","setStreetTouch","setPostaltoutch","setCityToutch","name","street","postal","city","setName","setStreet","setPostal","setCity","myForm","inputss"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./OrderingForm.module.css\";\r\nimport InputItem from \"./InputItem\";\r\nimport ButtonForm from \"./ButtonForm\";\r\nconst OrderingForm = (props) => {\r\n  const myShopingList = useSelector((state) => state.shopingList.myShopingList);\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [hasError, setError] = useState(false);\r\n\r\n  async function sendData(info) {\r\n    try {\r\n      setLoading(true);\r\n      props.submitingHandler(true);\r\n      const res = await fetch(\r\n        \"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ ...info, myElments: myShopingList }),\r\n          headers: { \"contint-type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"rong\");\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setLoading(false);\r\n    props.submitingHandler(false);\r\n    props.submitedHandler(true);\r\n  }\r\n\r\n  const formValid = nameValid && streetValid && cityValid && postalValid;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setNameToutch(true);\r\n    setStreetTouch(true);\r\n    setPostaltoutch(true);\r\n    setCityToutch(true);\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    sendData({\r\n      name,\r\n      street,\r\n      postal,\r\n      city,\r\n    });\r\n\r\n    setNameToutch(false);\r\n    setStreetTouch(false);\r\n    setPostaltoutch(false);\r\n    setCityToutch(false);\r\n    setName(\"\");\r\n    setStreet(\"\");\r\n    setPostal(\"\");\r\n    setCity(\"\");\r\n    props.submitedHandler(false);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.myForm} onSubmit={submitHandler}>\r\n      <div className={styles.inputss}>\r\n        <InputItem id=\"Your Name\"></InputItem>\r\n        <InputItem id=\"Street\"></InputItem>\r\n        <InputItem id=\"Postal Code\"></InputItem>\r\n        <InputItem id=\"City\"></InputItem>\r\n      </div>\r\n      <ButtonForm isLoading={isLoading} hasError={hasError} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderingForm;\r\n"]},"metadata":{},"sourceType":"module"}