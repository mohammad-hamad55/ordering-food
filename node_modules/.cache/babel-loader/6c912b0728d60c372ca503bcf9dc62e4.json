{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\cuurent\\\\01-starting-project\\\\src\\\\componints\\\\OrderingForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styles from \"./OrderingForm.module.css\";\nimport MyContext from \"./store/myContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderingForm = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const [name, setName] = useState(\"\");\n  const [nameToutch, setNameToutch] = useState(false);\n  const [street, setStreet] = useState(\"\");\n  const [streetToutch, setStreetTouch] = useState(false);\n  const [postal, setPostal] = useState(\"\");\n  const [postalToutch, setPostaltoutch] = useState(false);\n  const [city, setCity] = useState(\"\");\n  const [cityToutch, setCityToutch] = useState(false);\n  const nameValid = name.trim() !== \"\";\n  const streetValid = street.trim() !== \"\";\n  const postalValid = postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal);\n  const cityValid = city.trim() !== \"\";\n  const formValid = nameValid && streetValid && cityValid && postalValid;\n  let postalContent;\n\n  if (postal.trim === '') {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must not be empity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this);\n  } else if (isNaN(+postal)) {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this);\n  } else {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be 4 chracter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this);\n  }\n\n  const changeNameHandler = e => {\n    setName(e.target.value);\n  };\n\n  const blurNameHandler = () => {\n    setNameToutch(true);\n  };\n\n  const changeStreetHandler = e => {\n    setStreet(e.target.value);\n  };\n\n  const blurStreetHandler = () => {\n    setStreetTouch(true);\n  };\n\n  const changePostalHandler = e => {\n    setPostal(e.target.value);\n  };\n\n  const blurPostalHandler = () => {\n    setPostaltoutch(true);\n  };\n\n  const changeCityHandler = e => {\n    setCity(e.target.value);\n  };\n\n  const blurCityHandler = () => {\n    setCityToutch(true);\n  };\n\n  const cancelCLickHandler = e => {\n    e.preventDefault();\n    context.backdropApper(false);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setNameToutch(true);\n    setStreetTouch(true);\n    setPostaltoutch(true);\n    setCityToutch(true);\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(\"hamad\");\n    setNameToutch(false);\n    setStreetTouch(false);\n    setPostaltoutch(false);\n    setCityToutch(false);\n    setName('');\n    setStreet('');\n    setPostal('');\n    setCity('');\n  };\n\n  console.log(postalContent);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.myForm,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputss,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeNameHandler,\n        onBlur: blurNameHandler,\n        value: name,\n        className: !nameValid && nameToutch ? styles.error : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), !nameValid && nameToutch && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: changeStreetHandler,\n        onBlur: blurStreetHandler,\n        value: street,\n        className: !streetValid && streetToutch ? styles.error : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), !streetValid && streetToutch && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"street must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"code\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"code\",\n        onChange: changePostalHandler,\n        onBlur: blurPostalHandler,\n        value: postal,\n        className: !postalValid && postalToutch ? styles.error : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), !postalValid && postalToutch && postalContent, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: changeCityHandler,\n        onBlur: blurCityHandler,\n        value: city,\n        className: !cityValid && cityToutch ? styles.error : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), !cityValid && cityToutch && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"city must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelCLickHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderingForm, \"gVQirHkaR3BHAJGZi0fxJfm2siQ=\");\n\n_c = OrderingForm;\nexport default OrderingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderingForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/cuurent/01-starting-project/src/componints/OrderingForm.js"],"names":["React","useContext","useState","styles","MyContext","OrderingForm","context","name","setName","nameToutch","setNameToutch","street","setStreet","streetToutch","setStreetTouch","postal","setPostal","postalToutch","setPostaltoutch","city","setCity","cityToutch","setCityToutch","nameValid","trim","streetValid","postalValid","length","isNaN","cityValid","formValid","postalContent","changeNameHandler","e","target","value","blurNameHandler","changeStreetHandler","blurStreetHandler","changePostalHandler","blurPostalHandler","changeCityHandler","blurCityHandler","cancelCLickHandler","preventDefault","backdropApper","submitHandler","console","log","myForm","inputss","error","buttons"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styles from \"./OrderingForm.module.css\";\r\nimport MyContext from \"./store/myContext\";\r\nconst OrderingForm = () => {\r\n  const context = useContext(MyContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameToutch, setNameToutch] = useState(false);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [streetToutch, setStreetTouch] = useState(false);\r\n  const [postal, setPostal] = useState(\"\");\r\n  const [postalToutch, setPostaltoutch] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityToutch, setCityToutch] = useState(false);\r\n  const nameValid = name.trim() !== \"\";\r\n  const streetValid = street.trim() !== \"\";\r\n  const postalValid =\r\n    postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal) ;\r\n  const cityValid = city.trim() !== \"\";\r\n  const formValid=nameValid&&streetValid&&cityValid&&postalValid;\r\n  let postalContent;\r\n  if(postal.trim===''){\r\n    postalContent=<p>postal must not be empity</p>;\r\n  }else if(isNaN(+postal)){\r\n    postalContent=<p>postal must be a number</p>;\r\n  }\r\n  else{\r\n    postalContent=<p>postal must be 4 chracter</p>;\r\n  }\r\n  const changeNameHandler = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const blurNameHandler = () => {\r\n    setNameToutch(true);\r\n  };\r\n  const changeStreetHandler = (e) => {\r\n    setStreet(e.target.value);\r\n  };\r\n  const blurStreetHandler=()=>{\r\n    setStreetTouch(true);\r\n  }\r\n  const changePostalHandler = (e) => {\r\n    setPostal(e.target.value);\r\n  };\r\n  const blurPostalHandler=()=>{\r\n    setPostaltoutch(true);\r\n  }\r\n  const changeCityHandler = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n  const blurCityHandler=()=>{\r\n    setCityToutch(true);\r\n  }\r\n  const cancelCLickHandler = (e) => {\r\n    e.preventDefault();\r\n    context.backdropApper(false);\r\n  };\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setNameToutch(true);\r\n    setStreetTouch(true);\r\n    setPostaltoutch(true);\r\n    setCityToutch(true);\r\n  if(!formValid){\r\n    return\r\n  }\r\n    console.log(\"hamad\");\r\n    setNameToutch(false);\r\n    setStreetTouch(false);\r\n    setPostaltoutch(false);\r\n    setCityToutch(false);\r\n    setName('');\r\n    setStreet('');\r\n    setPostal('');\r\n    setCity('');\r\n  };\r\n\r\n  console.log(postalContent)\r\n  return (\r\n    <form className={styles.myForm} onSubmit={submitHandler}>\r\n      <div className={styles.inputss}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={changeNameHandler}\r\n          onBlur={blurNameHandler}\r\n          value={name}\r\n          className={!nameValid && nameToutch ? styles.error:''}\r\n        />\r\n        {!nameValid && nameToutch && <p>name must not be empty</p>}\r\n\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={changeStreetHandler}\r\n          onBlur={blurStreetHandler}\r\n          value={street}\r\n          className={!streetValid&&streetToutch?  styles.error:''}\r\n        />\r\n        {!streetValid&&streetToutch && <p>street must not be empty</p>}\r\n        <label htmlFor=\"code\">Postal Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"code\"\r\n          onChange={changePostalHandler}\r\n          onBlur={blurPostalHandler}\r\n          value={postal}\r\n          className={!postalValid &&postalToutch? styles.error:''}\r\n        />\r\n        {!postalValid&&postalToutch && postalContent}\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={changeCityHandler}\r\n          onBlur={blurCityHandler}\r\n          value={city}\r\n          className={!cityValid &&cityToutch? styles.error:''}\r\n        />\r\n        {!cityValid&&cityToutch && <p>city must not be empty</p>}\r\n      </div>\r\n\r\n      <div className={styles.buttons}>\r\n        <button onClick={cancelCLickHandler}>Cancel</button>\r\n        <button type=\"submit\">Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderingForm;\r\n"]},"metadata":{},"sourceType":"module"}