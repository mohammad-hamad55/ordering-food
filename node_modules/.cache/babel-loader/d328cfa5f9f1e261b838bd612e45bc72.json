{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Ordering Food Project\\\\Orering-Food-Project\\\\src\\\\componints\\\\cart\\\\OrderingForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styles from \"./OrderingForm.module.css\";\nimport InputItem from \"./InputItem\";\nimport ButtonForm from \"./ButtonForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderingForm = props => {\n  _s();\n\n  const myShopingList = useSelector(state => state.shopingList.myShopingList);\n  const [name, setName] = useState(\"\");\n  const [nameToutch, setNameToutch] = useState(false);\n  const [street, setStreet] = useState(\"\");\n  const [streetToutch, setStreetTouch] = useState(false);\n  const [postal, setPostal] = useState(\"\");\n  const [postalToutch, setPostaltoutch] = useState(false);\n  const [city, setCity] = useState(\"\");\n  const [cityToutch, setCityToutch] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  async function sendData(info) {\n    try {\n      setLoading(true);\n      props.submitingHandler(true);\n      const res = await fetch(\"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\", {\n        method: \"POST\",\n        body: JSON.stringify({ ...info,\n          myElments: myShopingList\n        }),\n        headers: {\n          \"contint-type\": \"application/json\"\n        }\n      });\n\n      if (!res.ok) {\n        throw new Error(\"rong\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n    props.submitingHandler(false);\n    props.submitedHandler(true);\n  }\n\n  const nameValid = name.trim() !== \"\";\n  const streetValid = street.trim() !== \"\";\n  const postalValid = postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal);\n  const cityValid = city.trim() !== \"\";\n  const formValid = nameValid && streetValid && cityValid && postalValid;\n  let postalContent;\n\n  if (postal.trim() === \"\") {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must not be empity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this);\n  } else if (isNaN(+postal)) {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this);\n  } else {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be 4 chracter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this);\n  }\n\n  const changeNameHandler = e => {\n    setName(e.target.value);\n  };\n\n  const blurNameHandler = () => {\n    setNameToutch(true);\n  };\n\n  const changeStreetHandler = e => {\n    setStreet(e.target.value);\n  };\n\n  const blurStreetHandler = () => {\n    setStreetTouch(true);\n  };\n\n  const changePostalHandler = e => {\n    setPostal(e.target.value);\n  };\n\n  const blurPostalHandler = () => {\n    setPostaltoutch(true);\n  };\n\n  const changeCityHandler = e => {\n    setCity(e.target.value);\n  };\n\n  const blurCityHandler = () => {\n    setCityToutch(true);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setNameToutch(true);\n    setStreetTouch(true);\n    setPostaltoutch(true);\n    setCityToutch(true);\n\n    if (!formValid) {\n      return;\n    }\n\n    sendData({\n      name,\n      street,\n      postal,\n      city\n    });\n    setNameToutch(false);\n    setStreetTouch(false);\n    setPostaltoutch(false);\n    setCityToutch(false);\n    setName(\"\");\n    setStreet(\"\");\n    setPostal(\"\");\n    setCity(\"\");\n    props.submitedHandler(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.myForm,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputss,\n      children: [/*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Your Name\",\n        changeHandler: changeNameHandler,\n        blurHandler: blurNameHandler,\n        value: name,\n        valdtionMessge: \"name must not be empty\",\n        inputToutch: nameToutch,\n        inputValid: nameValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Street\",\n        changeHandler: changeStreetHandler,\n        blurHandler: blurStreetHandler,\n        value: street,\n        valdtionMessge: \"street must not be empty\",\n        inputToutch: streetToutch,\n        inputValid: streetValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Postal Code\",\n        changeHandler: changePostalHandler,\n        blurHandler: blurPostalHandler,\n        value: postal,\n        valdtionMessge: postalContent,\n        inputToutch: postalToutch,\n        inputValid: postalValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"City\",\n        changeHandler: changeCityHandler,\n        blurHandler: blurCityHandler,\n        value: city,\n        valdtionMessge: \"city must not be empty\",\n        inputToutch: cityToutch,\n        inputValid: cityValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonForm, {\n      isLoading: isLoading,\n      hasError: hasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderingForm, \"MWqyzeujyC317Ldi1bcWCvYHOss=\", false, function () {\n  return [useSelector];\n});\n\n_c = OrderingForm;\nexport default OrderingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderingForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Ordering Food Project/Orering-Food-Project/src/componints/cart/OrderingForm.js"],"names":["React","useState","useSelector","styles","InputItem","ButtonForm","OrderingForm","props","myShopingList","state","shopingList","name","setName","nameToutch","setNameToutch","street","setStreet","streetToutch","setStreetTouch","postal","setPostal","postalToutch","setPostaltoutch","city","setCity","cityToutch","setCityToutch","isLoading","setLoading","hasError","setError","sendData","info","submitingHandler","res","fetch","method","body","JSON","stringify","myElments","headers","ok","Error","error","message","submitedHandler","nameValid","trim","streetValid","postalValid","length","isNaN","cityValid","formValid","postalContent","changeNameHandler","e","target","value","blurNameHandler","changeStreetHandler","blurStreetHandler","changePostalHandler","blurPostalHandler","changeCityHandler","blurCityHandler","submitHandler","preventDefault","myForm","inputss"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styles from \"./OrderingForm.module.css\";\r\nimport InputItem from \"./InputItem\";\r\nimport ButtonForm from \"./ButtonForm\";\r\nconst OrderingForm = (props) => {\r\n  const myShopingList = useSelector((state) => state.shopingList.myShopingList);\r\n  \r\n  const [name, setName] = useState(\"\");\r\n  const [nameToutch, setNameToutch] = useState(false);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [streetToutch, setStreetTouch] = useState(false);\r\n  const [postal, setPostal] = useState(\"\");\r\n  const [postalToutch, setPostaltoutch] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityToutch, setCityToutch] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [hasError, setError] = useState(false);\r\n\r\n  async function sendData(info) {\r\n    try {\r\n      setLoading(true);\r\n      props.submitingHandler(true);\r\n      const res = await fetch(\r\n        \"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ ...info, myElments: myShopingList }),\r\n          headers: { \"contint-type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"rong\");\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setLoading(false);\r\n    props.submitingHandler(false);\r\n    props.submitedHandler(true);\r\n  }\r\n  const nameValid = name.trim() !== \"\";\r\n  const streetValid = street.trim() !== \"\";\r\n  const postalValid =\r\n    postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal);\r\n  const cityValid = city.trim() !== \"\";\r\n  const formValid = nameValid && streetValid && cityValid && postalValid;\r\n  let postalContent;\r\n  if (postal.trim() === \"\") {\r\n    postalContent = <p>postal must not be empity</p>;\r\n  } else if (isNaN(+postal)) {\r\n    postalContent = <p>postal must be a number</p>;\r\n  } else {\r\n    postalContent = <p>postal must be 4 chracter</p>;\r\n  }\r\n  const changeNameHandler = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const blurNameHandler = () => {\r\n    setNameToutch(true);\r\n  };\r\n  const changeStreetHandler = (e) => {\r\n    setStreet(e.target.value);\r\n  };\r\n  const blurStreetHandler = () => {\r\n    setStreetTouch(true);\r\n  };\r\n  const changePostalHandler = (e) => {\r\n    setPostal(e.target.value);\r\n  };\r\n  const blurPostalHandler = () => {\r\n    setPostaltoutch(true);\r\n  };\r\n  const changeCityHandler = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n  const blurCityHandler = () => {\r\n    setCityToutch(true);\r\n  };\r\n \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setNameToutch(true);\r\n    setStreetTouch(true);\r\n    setPostaltoutch(true);\r\n    setCityToutch(true);\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    sendData({\r\n      name,\r\n      street,\r\n      postal,\r\n      city,\r\n    });\r\n\r\n    setNameToutch(false);\r\n    setStreetTouch(false);\r\n    setPostaltoutch(false);\r\n    setCityToutch(false);\r\n    setName(\"\");\r\n    setStreet(\"\");\r\n    setPostal(\"\");\r\n    setCity(\"\");\r\n    props.submitedHandler(false);\r\n  };\r\n \r\n  return (\r\n    <form className={styles.myForm} onSubmit={submitHandler}>\r\n      <div className={styles.inputss}>\r\n        <InputItem\r\n          id=\"Your Name\"\r\n          changeHandler={changeNameHandler}\r\n          blurHandler={blurNameHandler}\r\n          value={name}\r\n          valdtionMessge=\"name must not be empty\"\r\n          inputToutch={nameToutch}\r\n          inputValid={nameValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"Street\"\r\n          changeHandler={changeStreetHandler}\r\n          blurHandler={blurStreetHandler}\r\n          value={street}\r\n          valdtionMessge=\"street must not be empty\"\r\n          inputToutch={streetToutch}\r\n          inputValid={streetValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"Postal Code\"\r\n          changeHandler={changePostalHandler}\r\n          blurHandler={blurPostalHandler}\r\n          value={postal}\r\n          valdtionMessge={postalContent}\r\n          inputToutch={postalToutch}\r\n          inputValid={postalValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"City\"\r\n          changeHandler={changeCityHandler}\r\n          blurHandler={blurCityHandler}\r\n          value={city}\r\n          valdtionMessge=\"city must not be empty\"\r\n          inputToutch={cityToutch}\r\n          inputValid={cityValid}\r\n        ></InputItem>\r\n      </div>\r\n  <ButtonForm isLoading={isLoading} hasError={hasError}/>\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderingForm;\r\n"]},"metadata":{},"sourceType":"module"}