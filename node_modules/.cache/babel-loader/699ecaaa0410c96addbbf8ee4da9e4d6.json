{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst shopingListSlice = createSlice({\n  name: \"shoping-list-slice\",\n  initialState: {\n    myShopingList: []\n  },\n  reducers: {\n    shopingListHandler(state, action) {\n      let ok = false;\n      state.myShopingList.forEach(el => {\n        if (el.id === action.payload.id) {\n          el.miniCounter = +el.miniCounter + +action.payload.miniCounter;\n          ok = true;\n        }\n      });\n\n      if (!ok) {\n        state.myShopingList = [...state.myShopingList, action.payload];\n      }\n    },\n\n    updateTheOverLay(state, action) {\n      state.myShopingList.forEach(el => {\n        if (el.id === action.payload.id) {\n          if (action.payload.sign === \"+\") {\n            el.miniCounter = +el.miniCounter + 1;\n          }\n\n          if (action.payload.sign === \"-\") {\n            if (el.miniCounter === 1) {} else {\n              el.miniCounter = +el.miniCounter - 1;\n            }\n          }\n        }\n      });\n    },\n\n    removeElFromOverLay(state, action) {\n      const result = state.myShopingList.filter(el => !el.id === action.payload);\n      state.myShopingList = [...result];\n    },\n\n    clearShopingList(state) {\n      state.myShopingList = [];\n    }\n\n  }\n});\nexport const shopingListActions = shopingListSlice.actions;\nexport default shopingListSlice;","map":{"version":3,"sources":["C:/Users/user/Desktop/Ordering Food Project/Orering-Food-Project/src/store/shoping-list-slice.js"],"names":["createSlice","shopingListSlice","name","initialState","myShopingList","reducers","shopingListHandler","state","action","ok","forEach","el","id","payload","miniCounter","updateTheOverLay","sign","removeElFromOverLay","result","filter","clearShopingList","shopingListActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,oBAD6B;AAEnCC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAFqB;AAGnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAChC,UAAIC,EAAE,GAAG,KAAT;AAEAF,MAAAA,KAAK,CAACH,aAAN,CAAoBM,OAApB,CAA6BC,EAAD,IAAQ;AAClC,YAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACK,OAAP,CAAeD,EAA7B,EAAiC;AAC/BD,UAAAA,EAAE,CAACG,WAAH,GAAiB,CAACH,EAAE,CAACG,WAAJ,GAAkB,CAACN,MAAM,CAACK,OAAP,CAAeC,WAAnD;AACAL,UAAAA,EAAE,GAAG,IAAL;AACD;AACF,OALD;;AAMA,UAAI,CAACA,EAAL,EAAS;AACPF,QAAAA,KAAK,CAACH,aAAN,GAAsB,CAAC,GAAGG,KAAK,CAACH,aAAV,EAAyBI,MAAM,CAACK,OAAhC,CAAtB;AACD;AACF,KAbO;;AAcRE,IAAAA,gBAAgB,CAACR,KAAD,EAAQC,MAAR,EAAgB;AAC9BD,MAAAA,KAAK,CAACH,aAAN,CAAoBM,OAApB,CAA6BC,EAAD,IAAQ;AAClC,YAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACK,OAAP,CAAeD,EAA7B,EAAiC;AAC/B,cAAIJ,MAAM,CAACK,OAAP,CAAeG,IAAf,KAAwB,GAA5B,EAAiC;AAC/BL,YAAAA,EAAE,CAACG,WAAH,GAAiB,CAACH,EAAE,CAACG,WAAJ,GAAkB,CAAnC;AACD;;AACD,cAAIN,MAAM,CAACK,OAAP,CAAeG,IAAf,KAAwB,GAA5B,EAAiC;AAC/B,gBAAIL,EAAE,CAACG,WAAH,KAAmB,CAAvB,EAA0B,CACzB,CADD,MACO;AACLH,cAAAA,EAAE,CAACG,WAAH,GAAiB,CAACH,EAAE,CAACG,WAAJ,GAAkB,CAAnC;AACD;AACF;AACF;AACF,OAZD;AAaD,KA5BO;;AA6BRG,IAAAA,mBAAmB,CAACV,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAMU,MAAM,GAAGX,KAAK,CAACH,aAAN,CAAoBe,MAApB,CACZR,EAAD,IAAQ,CAACA,EAAE,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OADb,CAAf;AAGAN,MAAAA,KAAK,CAACH,aAAN,GAAsB,CAAC,GAAGc,MAAJ,CAAtB;AACD,KAlCO;;AAkCNE,IAAAA,gBAAgB,CAACb,KAAD,EAAO;AACvBA,MAAAA,KAAK,CAACH,aAAN,GAAoB,EAApB;AACD;;AApCO;AAHyB,CAAD,CAApC;AA2CA,OAAO,MAAMiB,kBAAkB,GAAGpB,gBAAgB,CAACqB,OAA5C;AAEP,eAAerB,gBAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst shopingListSlice = createSlice({\r\n  name: \"shoping-list-slice\",\r\n  initialState: { myShopingList: [] },\r\n  reducers: {\r\n    shopingListHandler(state, action) {\r\n      let ok = false;\r\n\r\n      state.myShopingList.forEach((el) => {\r\n        if (el.id === action.payload.id) {\r\n          el.miniCounter = +el.miniCounter + +action.payload.miniCounter;\r\n          ok = true;\r\n        }\r\n      });\r\n      if (!ok) {\r\n        state.myShopingList = [...state.myShopingList, action.payload];\r\n      }\r\n    },\r\n    updateTheOverLay(state, action) {\r\n      state.myShopingList.forEach((el) => {\r\n        if (el.id === action.payload.id) {\r\n          if (action.payload.sign === \"+\") {\r\n            el.miniCounter = +el.miniCounter + 1;\r\n          }\r\n          if (action.payload.sign === \"-\") {\r\n            if (el.miniCounter === 1) {\r\n            } else {\r\n              el.miniCounter = +el.miniCounter - 1;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    removeElFromOverLay(state, action) {\r\n      const result = state.myShopingList.filter(\r\n        (el) => !el.id === action.payload\r\n      );\r\n      state.myShopingList = [...result];\r\n    },clearShopingList(state){\r\n      state.myShopingList=[];\r\n    }\r\n  },\r\n});\r\n\r\nexport const shopingListActions = shopingListSlice.actions;\r\n\r\nexport default shopingListSlice;\r\n"]},"metadata":{},"sourceType":"module"}