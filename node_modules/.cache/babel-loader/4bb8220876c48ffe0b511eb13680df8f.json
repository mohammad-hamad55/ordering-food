{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Ordering Food Project\\\\Orering-Food-Project\\\\src\\\\hooks\\\\useValdtion.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useValdtion = type => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [nameToutch, setNameToutch] = useState(false);\n  const [street, setStreet] = useState(\"\");\n  const [streetToutch, setStreetTouch] = useState(false);\n  const [postal, setPostal] = useState(\"\");\n  const [postalToutch, setPostaltoutch] = useState(false);\n  const [city, setCity] = useState(\"\");\n  const [cityToutch, setCityToutch] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n  const nameValid = name.trim() !== \"\";\n  const streetValid = street.trim() !== \"\";\n  const postalValid = postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal);\n  const cityValid = city.trim() !== \"\";\n  const formValid = nameValid && streetValid && cityValid && postalValid;\n  let postalContent;\n\n  if (postal.trim() === \"\") {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must not be empity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this);\n  } else if (isNaN(+postal)) {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this);\n  } else {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be 4 chracter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this);\n  } // const changeNameHandler = (e) => {\n  //     setName(e.target.value);\n  //   };\n  //   const blurNameHandler = () => {\n  //     setNameToutch(true);\n  //   };\n  //   const changeStreetHandler = (e) => {\n  //     setStreet(e.target.value);\n  //   };\n  //   const blurStreetHandler = () => {\n  //     setStreetTouch(true);\n  //   };\n  //   const changePostalHandler = (e) => {\n  //     setPostal(e.target.value);\n  //   };\n  //   const blurPostalHandler = () => {\n  //     setPostaltoutch(true);\n  //   };\n  //   const changeCityHandler = (e) => {\n  //     setCity(e.target.value);\n  //   };\n  //   const blurCityHandler = () => {\n  //     setCityToutch(true);\n  //   };\n\n\n  return [name, nameToutch, nameValid, street, streetToutch, streetValid, postal, postalToutch, postalValid, city, cityToutch, cityValid];\n};\n\n_s(useValdtion, \"PpAwRkKPOeN3efgOP3vXzaVb95U=\");\n\nexport default useValdtion;","map":{"version":3,"sources":["C:/Users/user/Desktop/Ordering Food Project/Orering-Food-Project/src/hooks/useValdtion.js"],"names":["useState","useValdtion","type","name","setName","nameToutch","setNameToutch","street","setStreet","streetToutch","setStreetTouch","postal","setPostal","postalToutch","setPostaltoutch","city","setCity","cityToutch","setCityToutch","isLoading","setLoading","hasError","setError","nameValid","trim","streetValid","postalValid","length","isNaN","cityValid","formValid","postalContent"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,YAAD,EAAeC,cAAf,IAAiCV,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACmB,SAAD,EAAYC,UAAZ,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACqB,QAAD,EAAWC,QAAX,IAAuBtB,QAAQ,CAAC,KAAD,CAArC;AAEA,QAAMuB,SAAS,GAAGpB,IAAI,CAACqB,IAAL,OAAgB,EAAlC;AACA,QAAMC,WAAW,GAAGlB,MAAM,CAACiB,IAAP,OAAkB,EAAtC;AACA,QAAME,WAAW,GACff,MAAM,CAACa,IAAP,OAAkB,EAAlB,IAAwBb,MAAM,CAACgB,MAAP,KAAkB,CAA1C,IAA+C,CAACC,KAAK,CAAC,CAACjB,MAAF,CADvD;AAEA,QAAMkB,SAAS,GAAGd,IAAI,CAACS,IAAL,OAAgB,EAAlC;AAEA,QAAMM,SAAS,GAAGP,SAAS,IAAIE,WAAb,IAA4BI,SAA5B,IAAyCH,WAA3D;AAEA,MAAIK,aAAJ;;AACA,MAAIpB,MAAM,CAACa,IAAP,OAAkB,EAAtB,EAA0B;AACxBO,IAAAA,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB;AACD,GAFD,MAEO,IAAIH,KAAK,CAAC,CAACjB,MAAF,CAAT,EAAoB;AACzBoB,IAAAA,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB;AACD,GAFM,MAEA;AACLA,IAAAA,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB;AACD,GA3B2B,CA6B5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO,CACL5B,IADK,EAELE,UAFK,EAGLkB,SAHK,EAILhB,MAJK,EAKLE,YALK,EAMLgB,WANK,EAOLd,MAPK,EAQLE,YARK,EASLa,WATK,EAULX,IAVK,EAWLE,UAXK,EAYLY,SAZK,CAAP;AAcD,CApED;;GAAM5B,W;;AAsEN,eAAeA,WAAf","sourcesContent":["import { useState } from \"react\";\r\nconst useValdtion = (type) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [nameToutch, setNameToutch] = useState(false);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [streetToutch, setStreetTouch] = useState(false);\r\n  const [postal, setPostal] = useState(\"\");\r\n  const [postalToutch, setPostaltoutch] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityToutch, setCityToutch] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [hasError, setError] = useState(false);\r\n\r\n  const nameValid = name.trim() !== \"\";\r\n  const streetValid = street.trim() !== \"\";\r\n  const postalValid =\r\n    postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal);\r\n  const cityValid = city.trim() !== \"\";\r\n\r\n  const formValid = nameValid && streetValid && cityValid && postalValid;\r\n\r\n  let postalContent;\r\n  if (postal.trim() === \"\") {\r\n    postalContent = <p>postal must not be empity</p>;\r\n  } else if (isNaN(+postal)) {\r\n    postalContent = <p>postal must be a number</p>;\r\n  } else {\r\n    postalContent = <p>postal must be 4 chracter</p>;\r\n  }\r\n\r\n  // const changeNameHandler = (e) => {\r\n  //     setName(e.target.value);\r\n  //   };\r\n  //   const blurNameHandler = () => {\r\n  //     setNameToutch(true);\r\n  //   };\r\n  //   const changeStreetHandler = (e) => {\r\n  //     setStreet(e.target.value);\r\n  //   };\r\n  //   const blurStreetHandler = () => {\r\n  //     setStreetTouch(true);\r\n  //   };\r\n  //   const changePostalHandler = (e) => {\r\n  //     setPostal(e.target.value);\r\n  //   };\r\n  //   const blurPostalHandler = () => {\r\n  //     setPostaltoutch(true);\r\n  //   };\r\n  //   const changeCityHandler = (e) => {\r\n  //     setCity(e.target.value);\r\n  //   };\r\n  //   const blurCityHandler = () => {\r\n  //     setCityToutch(true);\r\n  //   };\r\n\r\n  return [\r\n    name,\r\n    nameToutch,\r\n    nameValid,\r\n    street,\r\n    streetToutch,\r\n    streetValid,\r\n    postal,\r\n    postalToutch,\r\n    postalValid,\r\n    city,\r\n    cityToutch,\r\n    cityValid,\r\n  ];\r\n};\r\n\r\nexport default useValdtion;\r\n"]},"metadata":{},"sourceType":"module"}