{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\cuurent\\\\01-starting-project\\\\src\\\\componints\\\\OrderingForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styles from \"./OrderingForm.module.css\";\nimport MyContext from \"./store/myContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderingForm = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const [name, setName] = useState(\"\");\n  const [nameToutch, setNameToutch] = useState(false);\n  const [street, setStreet] = useState(\"\");\n  const [streetToutch, setStreetTouch] = useState(false);\n  const [postal, setPostal] = useState(\"\");\n  const [postalToutch, setPostaltoutch] = useState(false);\n  const [city, setCity] = useState(\"\");\n  const [cityToutch, setCityToutch] = useState(false);\n  const nameValid = name.trim() !== \"\";\n  const streetValid = street.trim() !== \"\" && streetToutch;\n  const postalValid = postal.trim() !== \"\" && postalToutch && postal.length > 4 && !isNaN(+postal);\n  const cityValid = city.trim() !== \"\" && cityToutch;\n\n  const changeNameHandler = e => {\n    setName(e.target.value);\n  };\n\n  const blurNameHandler = () => {\n    setNameToutch(true);\n  };\n\n  const changeStreetHandler = e => {\n    setStreet(e.target.value);\n  };\n\n  const changePostalHandler = e => {\n    setPostal(e.target.value);\n  };\n\n  const changeCityHandler = e => {\n    setCity(e.target.value);\n  };\n\n  const cancelCLickHandler = e => {\n    e.preventDefault();\n    context.backdropApper(false);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    console.log(\"hamad\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.myForm,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputss,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeNameHandler,\n        onBlur: blurNameHandler,\n        className: !nameValid && nameToutch && styles.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), !nameValid && nameToutch && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: changeStreetHandler,\n        className: streetValid && styles.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), streetValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"street must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"code\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"code\",\n        onChange: changePostalHandler,\n        className: postalValid && styles.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), postalValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"sa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: changeCityHandler,\n        className: cityValid && styles.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), cityValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"city must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelCLickHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderingForm, \"gVQirHkaR3BHAJGZi0fxJfm2siQ=\");\n\n_c = OrderingForm;\nexport default OrderingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderingForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/cuurent/01-starting-project/src/componints/OrderingForm.js"],"names":["React","useContext","useState","styles","MyContext","OrderingForm","context","name","setName","nameToutch","setNameToutch","street","setStreet","streetToutch","setStreetTouch","postal","setPostal","postalToutch","setPostaltoutch","city","setCity","cityToutch","setCityToutch","nameValid","trim","streetValid","postalValid","length","isNaN","cityValid","changeNameHandler","e","target","value","blurNameHandler","changeStreetHandler","changePostalHandler","changeCityHandler","cancelCLickHandler","preventDefault","backdropApper","submitHandler","console","log","myForm","inputss","error","buttons"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styles from \"./OrderingForm.module.css\";\r\nimport MyContext from \"./store/myContext\";\r\nconst OrderingForm = () => {\r\n  const context = useContext(MyContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameToutch, setNameToutch] = useState(false);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [streetToutch, setStreetTouch] = useState(false);\r\n  const [postal, setPostal] = useState(\"\");\r\n  const [postalToutch, setPostaltoutch] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityToutch, setCityToutch] = useState(false);\r\n  const nameValid = name.trim() !== \"\" ;\r\n  const streetValid = street.trim() !== \"\" && streetToutch;\r\n  const postalValid =\r\n    postal.trim() !== \"\" &&\r\n    postalToutch &&\r\n    postal.length > 4 &&\r\n    !isNaN(+postal);\r\n  const cityValid = city.trim() !== \"\" && cityToutch;\r\n  const changeNameHandler = (e) => {\r\n    \r\n    setName(e.target.value);\r\n  };\r\n  const blurNameHandler=()=>{\r\n    setNameToutch(true);\r\n  }\r\n  const changeStreetHandler = (e) => {\r\n    setStreet(e.target.value);\r\n  };\r\n  const changePostalHandler = (e) => {\r\n    setPostal(e.target.value);\r\n  };\r\n  const changeCityHandler = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n  const cancelCLickHandler = (e) => {\r\n    e.preventDefault();\r\n    context.backdropApper(false);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"hamad\");\r\n  };\r\n  return (\r\n    <form className={styles.myForm} onSubmit={submitHandler}>\r\n      <div className={styles.inputss}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={changeNameHandler}\r\n          onBlur={blurNameHandler}\r\n          className={!nameValid &&nameToutch&& styles.error}\r\n        />\r\n        {!nameValid&&nameToutch && <p>name must not be empty</p>}\r\n\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={changeStreetHandler}\r\n          className={streetValid && styles.error}\r\n        />\r\n        {streetValid && <p>street must not be empty</p>}\r\n        <label htmlFor=\"code\">Postal Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"code\"\r\n          onChange={changePostalHandler}\r\n          className={postalValid && styles.error}\r\n        />\r\n        {postalValid && <p>sa</p>}\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={changeCityHandler}\r\n          className={cityValid && styles.error}\r\n        />\r\n        {cityValid && <p>city must not be empty</p>}\r\n      </div>\r\n\r\n      <div className={styles.buttons}>\r\n        <button onClick={cancelCLickHandler}>Cancel</button>\r\n        <button type=\"submit\">Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderingForm;\r\n"]},"metadata":{},"sourceType":"module"}