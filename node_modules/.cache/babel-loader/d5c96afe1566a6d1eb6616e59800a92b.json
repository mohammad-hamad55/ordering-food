{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\cuurent\\\\01-starting-project\\\\src\\\\componints\\\\OrderingForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styles from \"./OrderingForm.module.css\";\nimport MyContext from \"./store/myContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderingForm = () => {\n  _s();\n\n  const context = useContext(MyContext);\n  const [name, setName] = useState(\"\");\n  const [nameToutch, setNameToutch] = useState(false);\n  const [street, setStreet] = useState(\"\");\n  const [streetToutch, setStreetTouch] = useState(false);\n  const [postal, setPostal] = useState(\"\");\n  const [postalToutch, setPostaltoutch] = useState(false);\n  const [city, setCity] = useState(\"\");\n  const [cityToutch, setCityToutch] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [hasError, setError] = useState(false);\n\n  async function sendData(info) {\n    try {\n      setLoading(true);\n      const res = await fetch(\"https://react-66e3f-de-rtdb.firebaseio.com/infos.json\", {\n        method: \"POST\",\n        body: JSON.stringify(info),\n        headers: {\n          \"contint-type\": \"application/json\"\n        }\n      });\n\n      if (!res.ok) {\n        throw new Error(\"rong\");\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n  }\n\n  const nameValid = name.trim() !== \"\";\n  const streetValid = street.trim() !== \"\";\n  const postalValid = postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal);\n  const cityValid = city.trim() !== \"\";\n  const formValid = nameValid && streetValid && cityValid && postalValid;\n  let postalContent;\n\n  if (postal.trim() === \"\") {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must not be empity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this);\n  } else if (isNaN(+postal)) {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be a number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this);\n  } else {\n    postalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"postal must be 4 chracter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this);\n  }\n\n  const changeNameHandler = e => {\n    setName(e.target.value);\n  };\n\n  const blurNameHandler = () => {\n    setNameToutch(true);\n  };\n\n  const changeStreetHandler = e => {\n    setStreet(e.target.value);\n  };\n\n  const blurStreetHandler = () => {\n    setStreetTouch(true);\n  };\n\n  const changePostalHandler = e => {\n    setPostal(e.target.value);\n  };\n\n  const blurPostalHandler = () => {\n    setPostaltoutch(true);\n  };\n\n  const changeCityHandler = e => {\n    setCity(e.target.value);\n  };\n\n  const blurCityHandler = () => {\n    setCityToutch(true);\n  };\n\n  const cancelCLickHandler = e => {\n    e.preventDefault();\n    context.backdropApper(false);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    setNameToutch(true);\n    setStreetTouch(true);\n    setPostaltoutch(true);\n    setCityToutch(true);\n\n    if (!formValid) {\n      return;\n    }\n\n    sendData({\n      name,\n      street,\n      postal,\n      city\n    });\n    setNameToutch(false);\n    setStreetTouch(false);\n    setPostaltoutch(false);\n    setCityToutch(false);\n    setName(\"\");\n    setStreet(\"\");\n    setPostal(\"\");\n    setCity(\"\");\n  };\n\n  let button;\n\n  if (hasError) {\n    button = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 14\n    }, this);\n  } else {\n    button = /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.myForm,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputss,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: changeNameHandler,\n        onBlur: blurNameHandler,\n        value: name,\n        className: !nameValid && nameToutch ? styles.error : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), !nameValid && nameToutch && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        onChange: changeStreetHandler,\n        onBlur: blurStreetHandler,\n        value: street,\n        className: !streetValid && streetToutch ? styles.error : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), !streetValid && streetToutch && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"street must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"code\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"code\",\n        onChange: changePostalHandler,\n        onBlur: blurPostalHandler,\n        value: postal,\n        className: !postalValid && postalToutch ? styles.error : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), !postalValid && postalToutch && postalContent, /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: changeCityHandler,\n        onBlur: blurCityHandler,\n        value: city,\n        className: !cityValid && cityToutch ? styles.error : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), !cityValid && cityToutch && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"city must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelCLickHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 22\n      }, this) : button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderingForm, \"5jCZBP0Hxlh64xzY4MHoGBt8pfE=\");\n\n_c = OrderingForm;\nexport default OrderingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderingForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/cuurent/01-starting-project/src/componints/OrderingForm.js"],"names":["React","useContext","useState","styles","MyContext","OrderingForm","context","name","setName","nameToutch","setNameToutch","street","setStreet","streetToutch","setStreetTouch","postal","setPostal","postalToutch","setPostaltoutch","city","setCity","cityToutch","setCityToutch","isLoading","setLoading","hasError","setError","sendData","info","res","fetch","method","body","JSON","stringify","headers","ok","Error","error","message","nameValid","trim","streetValid","postalValid","length","isNaN","cityValid","formValid","postalContent","changeNameHandler","e","target","value","blurNameHandler","changeStreetHandler","blurStreetHandler","changePostalHandler","blurPostalHandler","changeCityHandler","blurCityHandler","cancelCLickHandler","preventDefault","backdropApper","submitHandler","button","myForm","inputss","buttons"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport styles from \"./OrderingForm.module.css\";\r\nimport MyContext from \"./store/myContext\";\r\nconst OrderingForm = () => {\r\n  const context = useContext(MyContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameToutch, setNameToutch] = useState(false);\r\n  const [street, setStreet] = useState(\"\");\r\n  const [streetToutch, setStreetTouch] = useState(false);\r\n  const [postal, setPostal] = useState(\"\");\r\n  const [postalToutch, setPostaltoutch] = useState(false);\r\n  const [city, setCity] = useState(\"\");\r\n  const [cityToutch, setCityToutch] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [hasError, setError] = useState(false);\r\n\r\n  async function sendData(info) {\r\n    try {\r\n      setLoading(true);\r\n      const res = await fetch(\r\n        \"https://react-66e3f-de-rtdb.firebaseio.com/infos.json\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(info),\r\n          headers: { \"contint-type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"rong\");\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n  const nameValid = name.trim() !== \"\";\r\n  const streetValid = street.trim() !== \"\";\r\n  const postalValid =\r\n    postal.trim() !== \"\" && postal.length === 4 && !isNaN(+postal);\r\n  const cityValid = city.trim() !== \"\";\r\n  const formValid = nameValid && streetValid && cityValid && postalValid;\r\n  let postalContent;\r\n  if (postal.trim() === \"\") {\r\n    postalContent = <p>postal must not be empity</p>;\r\n  } else if (isNaN(+postal)) {\r\n    postalContent = <p>postal must be a number</p>;\r\n  } else {\r\n    postalContent = <p>postal must be 4 chracter</p>;\r\n  }\r\n  const changeNameHandler = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const blurNameHandler = () => {\r\n    setNameToutch(true);\r\n  };\r\n  const changeStreetHandler = (e) => {\r\n    setStreet(e.target.value);\r\n  };\r\n  const blurStreetHandler = () => {\r\n    setStreetTouch(true);\r\n  };\r\n  const changePostalHandler = (e) => {\r\n    setPostal(e.target.value);\r\n  };\r\n  const blurPostalHandler = () => {\r\n    setPostaltoutch(true);\r\n  };\r\n  const changeCityHandler = (e) => {\r\n    setCity(e.target.value);\r\n  };\r\n  const blurCityHandler = () => {\r\n    setCityToutch(true);\r\n  };\r\n  const cancelCLickHandler = (e) => {\r\n    e.preventDefault();\r\n    context.backdropApper(false);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setNameToutch(true);\r\n    setStreetTouch(true);\r\n    setPostaltoutch(true);\r\n    setCityToutch(true);\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    sendData({\r\n      name,\r\n      street,\r\n      postal,\r\n      city,\r\n    });\r\n    setNameToutch(false);\r\n    setStreetTouch(false);\r\n    setPostaltoutch(false);\r\n    setCityToutch(false);\r\n    setName(\"\");\r\n    setStreet(\"\");\r\n    setPostal(\"\");\r\n    setCity(\"\");\r\n  };\r\n  let button;\r\n  if (hasError) {\r\n    button = <p>error</p>;\r\n  } else {\r\n    button = <button type=\"submit\">Confirm</button>;\r\n  }\r\n  return (\r\n    <form className={styles.myForm} onSubmit={submitHandler}>\r\n      <div className={styles.inputss}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={changeNameHandler}\r\n          onBlur={blurNameHandler}\r\n          value={name}\r\n          className={!nameValid && nameToutch ? styles.error : \"\"}\r\n        />\r\n        {!nameValid && nameToutch && <p>name must not be empty</p>}\r\n\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"street\"\r\n          onChange={changeStreetHandler}\r\n          onBlur={blurStreetHandler}\r\n          value={street}\r\n          className={!streetValid && streetToutch ? styles.error : \"\"}\r\n        />\r\n        {!streetValid && streetToutch && <p>street must not be empty</p>}\r\n        <label htmlFor=\"code\">Postal Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"code\"\r\n          onChange={changePostalHandler}\r\n          onBlur={blurPostalHandler}\r\n          value={postal}\r\n          className={!postalValid && postalToutch ? styles.error : \"\"}\r\n        />\r\n        {!postalValid && postalToutch && postalContent}\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={changeCityHandler}\r\n          onBlur={blurCityHandler}\r\n          value={city}\r\n          className={!cityValid && cityToutch ? styles.error : \"\"}\r\n        />\r\n        {!cityValid && cityToutch && <p>city must not be empty</p>}\r\n      </div>\r\n\r\n      <div className={styles.buttons}>\r\n        <button onClick={cancelCLickHandler}>Cancel</button>\r\n        {isLoading ? <p>loading...</p> : button}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderingForm;\r\n"]},"metadata":{},"sourceType":"module"}