{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Ordering Food Project\\\\Orering-Food-Project\\\\src\\\\componints\\\\cart\\\\OrderingForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { formActions } from '../../store/form-slice';\nimport styles from \"./OrderingForm.module.css\";\nimport InputItem from \"./InputItem\";\nimport ButtonForm from \"./ButtonForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderingForm = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const myShopingList = useSelector(state => state.shopingList.myShopingList);\n  const myInputs = useSelector(state => state.form);\n  const nameValid = myInputs.name.trim() !== \"\";\n  const streetValid = myInputs.street.trim() !== \"\";\n  const postalValid = myInputs.postal.trim() !== \"\" && myInputs.postal.length === 4 && !isNaN(+myInputs.postal);\n  const cityValid = myInputs.city.trim() !== \"\";\n  const formValid = nameValid && streetValid && cityValid && postalValid;\n\n  async function sendData(info) {\n    try {\n      dispatch(formActions.changeLoading(true));\n      props.submitingHandler(true);\n      const res = await fetch(\"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\", {\n        method: \"POST\",\n        body: JSON.stringify({ ...info,\n          myElments: myShopingList\n        }),\n        headers: {\n          \"contint-type\": \"application/json\"\n        }\n      });\n\n      if (!res.ok) {\n        throw new Error(\"rong\");\n      }\n    } catch (error) {\n      dispatch(formActions.changeError(error.message));\n    }\n\n    dispatch(formActions.changeLoading(false));\n    props.submitingHandler(false);\n    props.submitedHandler(true);\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(formActions.changeInputtoutchs(true));\n\n    if (!formValid) {\n      return;\n    }\n\n    sendData({\n      name: myInputs.name,\n      street: myInputs.street,\n      postal: myInputs.postal,\n      city: myInputs.city\n    });\n    dispatch(formActions.changeInputtoutchs(false));\n    dispatch(formActions.clearInputs());\n    props.submitedHandler(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.myForm,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputss,\n      children: [/*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Your Name\" // changeHandler={changeNameHandler}\n        // blurHandler={blurNameHandler}\n        // value={name}\n        // valdtionMessge=\"name must not be empty\"\n        // inputToutch={nameToutch}\n        // inputValid={nameValid}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Street\" // changeHandler={changeStreetHandler}\n        // blurHandler={blurStreetHandler}\n        // value={street}\n        // valdtionMessge=\"street must not be empty\"\n        // inputToutch={streetToutch}\n        // inputValid={streetValid}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"Postal Code\" // changeHandler={changePostalHandler}\n        // blurHandler={blurPostalHandler}\n        // value={postal}\n        // valdtionMessge={postalContent}\n        // inputToutch={postalToutch}\n        // inputValid={postalValid}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n        id: \"City\" // changeHandler={changeCityHandler}\n        // blurHandler={blurCityHandler}\n        // value={city}\n        // valdtionMessge=\"city must not be empty\"\n        // inputToutch={cityToutch}\n        // inputValid={cityValid}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderingForm, \"9sy02Bauk4BwGkwfWdmqJ/hA9eE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderingForm;\nexport default OrderingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderingForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Ordering Food Project/Orering-Food-Project/src/componints/cart/OrderingForm.js"],"names":["React","useSelector","useDispatch","formActions","styles","InputItem","ButtonForm","OrderingForm","props","dispatch","myShopingList","state","shopingList","myInputs","form","nameValid","name","trim","streetValid","street","postalValid","postal","length","isNaN","cityValid","city","formValid","sendData","info","changeLoading","submitingHandler","res","fetch","method","body","JSON","stringify","myElments","headers","ok","Error","error","changeError","message","submitedHandler","submitHandler","e","preventDefault","changeInputtoutchs","clearInputs","myForm","inputss"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {formActions} from '../../store/form-slice';\r\nimport styles from \"./OrderingForm.module.css\";\r\nimport InputItem from \"./InputItem\";\r\nimport ButtonForm from \"./ButtonForm\";\r\nconst OrderingForm = (props) => {\r\n  const dispatch=useDispatch();\r\n  const myShopingList = useSelector((state) => state.shopingList.myShopingList);\r\n  const myInputs=useSelector(state=>state.form);\r\n\r\n  const nameValid = myInputs.name.trim() !== \"\";\r\n  const streetValid = myInputs.street.trim() !== \"\";\r\n  const postalValid =\r\n  myInputs.postal.trim() !== \"\" && myInputs.postal.length === 4 && !isNaN(+myInputs.postal);\r\n  const cityValid = myInputs.city.trim() !== \"\";\r\n\r\n  const formValid = nameValid && streetValid && cityValid && postalValid;\r\n\r\n  async function sendData(info) {\r\n    try {\r\n    \r\n      dispatch(formActions.changeLoading(true));\r\n      props.submitingHandler(true);\r\n      const res = await fetch(\r\n        \"https://react-66e3f-default-rtdb.firebaseio.com/infos.json\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ ...info, myElments: myShopingList }),\r\n          headers: { \"contint-type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      if (!res.ok) {\r\n        throw new Error(\"rong\");\r\n      }\r\n    } catch (error) {\r\n    \r\n      dispatch(formActions.changeError(error.message));\r\n    }\r\n    dispatch(formActions.changeLoading(false));\r\n    props.submitingHandler(false);\r\n    props.submitedHandler(true);\r\n  }\r\n\r\n\r\n \r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(formActions.changeInputtoutchs(true));\r\n    if (!formValid) {\r\n      return;\r\n    }\r\n    sendData({\r\n      name:myInputs.name,\r\n      street:myInputs.street,\r\n      postal:myInputs.postal,\r\n      city:myInputs.city,\r\n    });\r\n\r\n    dispatch(formActions.changeInputtoutchs(false));\r\n    dispatch(formActions.clearInputs());\r\n    props.submitedHandler(false);\r\n  };\r\n \r\n  return (\r\n    <form className={styles.myForm} onSubmit={submitHandler}>\r\n      <div className={styles.inputss}>\r\n        <InputItem\r\n          id=\"Your Name\"\r\n          // changeHandler={changeNameHandler}\r\n          // blurHandler={blurNameHandler}\r\n          // value={name}\r\n          // valdtionMessge=\"name must not be empty\"\r\n          // inputToutch={nameToutch}\r\n          // inputValid={nameValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"Street\"\r\n          // changeHandler={changeStreetHandler}\r\n          // blurHandler={blurStreetHandler}\r\n          // value={street}\r\n          // valdtionMessge=\"street must not be empty\"\r\n          // inputToutch={streetToutch}\r\n          // inputValid={streetValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"Postal Code\"\r\n          // changeHandler={changePostalHandler}\r\n          // blurHandler={blurPostalHandler}\r\n          // value={postal}\r\n          // valdtionMessge={postalContent}\r\n          // inputToutch={postalToutch}\r\n          // inputValid={postalValid}\r\n        ></InputItem>\r\n        <InputItem\r\n          id=\"City\"\r\n          // changeHandler={changeCityHandler}\r\n          // blurHandler={blurCityHandler}\r\n          // value={city}\r\n          // valdtionMessge=\"city must not be empty\"\r\n          // inputToutch={cityToutch}\r\n          // inputValid={cityValid}\r\n        ></InputItem>\r\n      </div>\r\n  <ButtonForm />\r\n      \r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OrderingForm;\r\n"]},"metadata":{},"sourceType":"module"}